The logic description will contain what types i knows, and what fields it uses in what order.
Perhaps I will generate a source with that information.


Identifiable should be a separate aspect - in this way there is no special handling of
persistent entities: they simply have an Identifiable aspect. Then i should call it Persistent...

MAFKernelIdentifier: I can either use a Comparable id with TreeMaps OR a POJO wit instance management
The POJO seems to be better because then there is only one lookup at the creation, and existence
verification - later I have simple lookups in the HashMaps, on object unique instance ID I suppose 



process package: later to be transformed to the runtime environment of entities,
now temporal environment for template based import. The aim is to create a callback-based
parsing process, later to be reused for any on-the-fly text parsing (syntax highlight, auto complete).
This way objects can't call each other, the call stack local variables must be replaced with
call context objects managed by this package. (the same applies later for the logic communication)